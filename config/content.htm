<h1>Introduction</h1>
<p><span>Department of Mechanical Design Engineering 2019 Spring Introduction to Collaborative Product Design Practice</span></p>
<p>BG4 Product collaboration design <span>Warehousing <a href="https://github.com/mdekmol/cd2019b-task1-2019cdb_t1_g4">Website</a></span></p>
<p><span><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g4/reveal/index.html#/">Reveal</a></span></p>
<p><a href="https://mdekmol.github.io/cd2019b-task1-2019cdb_t1_g4/blog/index.html">Blog</a></p>
<p></p>
<p><strong>評量方式與標準:</strong></p>
<p>評分比例:</p>
<p>學員出席 (20%)</p>
<p>Github 倉儲管理  (20%)</p>
<p>Onshape 協同操作 (20%)</p>
<p>V-rep 模擬 (20%)</p>
<p>程式開發 (20%)</p>
<p>評分方式:</p>
<p>CD 每週自評與互評表單: <a href="https://goo.gl/forms/qtk5fxdeGYHCeI1M2">https://goo.gl/forms/qtk5fxdeGYHCeI1M2</a> </p>
<p>學員自我評量<span> (30%)</span></p>
<p>分組自我評量 (30%)</p>
<p>倉儲歷程查驗 (40%)</p>
<p>教學方式:</p>
<p>課堂講授</p>
<p>操作錄影</p>
<p>學員實習</p>
<p>分組報告</p>
<h1>Group Member</h1>
<p style="text-align: left;">Team Leader: </p>
<p style="text-align: left;"><span>鐘偉哲 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=33822614" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40623224">40623224</a></span></p>
<p style="text-align: left;">Member:</p>
<p style="text-align: left;">翁嘉宏 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=33822579" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40623210">40623210</a></p>
<p style="text-align: left;">卓昆鋒 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=33822666" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40623225">40623225</a></p>
<p style="text-align: left;">鄭清銓 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=33822696" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40623226">40623226</a></p>
<p style="text-align: left;">張耀元 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=33822660" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40623227">40623227</a></p>
<p style="text-align: left;">洪一木 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=33392640" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40623234">40623234</a></p>
<p style="text-align: left;">許筌翔 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=33822803" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40623238">40623238</a></p>
<p style="text-align: left;">許登貴 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=33822664" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40623239">40623239</a></p>
<p style="text-align: left;">莊子慶 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=48191625" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40423158">40423158</a></p>
<p style="text-align: left;">郭金豪 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=14342921" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40423232">40423232</a></p>
<p style="text-align: left;">陳憲棠 <a class="f4 d-inline-block mr-1" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=14343172" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="https://github.com/40423237">40423237</a></p>
<h1>Internship</h1>
<p><span>每週各分組組員必須將參與分組協同過程之電腦操作流程, 並嵌入各分組網站頁面中.</span></p>
<h2>Internship 1</h2>
<h4>學習要點</h4>
<p>本學期的課程將從各學員自行製作可攜程式系統開始, 讓各學員以團隊協同的方式整理資料, 並且推選代表進行簡報.</p>
<p>此外, 透過 ungit 的導入, 讓 git 與 github 在圖形化介面與中文提交訊息的交互應用下, 能夠更加提升學習效果.</p>
<p>最後, 本學期希望能改寫<span> </span><a href="https://github.com/chiamingyen/pygrouf">Pygrouf</a><span> </span>成為合用的網際同儕互評暨自評系統.</p>
<h4>各學員執行任務</h4>
<p>請根據 <a href="http://mde.tw/wcm2019/content/%E5%AF%A6%E7%BF%92%E9%A0%85%E7%9B%AE%E4%BA%8C.html">http://mde.tw/wcm2019/content/實習項目二.html</a> 中的說明:</p>
<ol>
<li>自行建立一套可攜程式系統, 並將過程製作成 3~5 分鐘的簡報, 各班每十號推選一名代表利用課堂時間進行簡報說明.</li>
<li>請設法利用 ungit 管理自己的協同產品設計實習課程網頁 (格式自選, 系統自選).</li>
<li>
<p>請以各班每十號為一組, 研讀 Git 教材: <a href="https://git-scm.com/book/zh-tw/v2">https://git-scm.com/book/zh-tw/v2</a> 並各自執行下列教材後, 推選一名代表利用課堂時間進行 3~5 分鐘的內容簡報說明.</p>
<p>Github 教材: <a href="https://lab.github.com/">https://lab.github.com/</a>  (已經以 scrum-1 帳號開始<a href="https://github.com/scrum-1/github-slideshow">學習流程</a>)</p>
</li>
</ol>
<h4>學習成果驗收</h4>
<ol>
<li>各學員確實閱讀 <a href="http://mde.tw/wcm2019/content/%E5%AF%A6%E7%BF%92%E9%A0%85%E7%9B%AE%E4%BA%8C.html">http://mde.tw/wcm2019/content/實習項目二.html</a><span> 中的說明, 並學會自行製作可攜程式系統.</span></li>
<li><span>各學員確實研讀 Git 教材: <a href="https://git-scm.com/book/zh-tw/v2">https://git-scm.com/book/zh-tw/v2</a><span> 內容, 能夠整理出 3~5 分鐘的簡報.</span></span></li>
<li><span><span>各學員確實執行 <a href="https://lab.github.com/">https://lab.github.com/</a><span>  中的導引內容, 並能夠整理出 3~5 分鐘的簡報.</span></span></span><span><span><span></span></span></span></li>
</ol>
<h3>隨身系統</h3>
<p>建立可攜程式系統</p>
<p>操作影片</p>
<p>安裝 Python 3.7.2</p>
<p>修改 Scripts/pip.exe 中的系統連結設定</p>
<p>HxD: <a href="https://mh-nexus.de/en/hxd/">https://mh-nexus.de/en/hxd/</a> </p>
<p>納入相關工具</p>
<p>利用 pip 安裝或移除 Python 模組</p>
<p>不同 home 的啟動設置</p>
<p><a href="https://github.com/mottosso/Qt.py">https://github.com/mottosso/Qt.py</a> (439 個 stars) 與 <a href="https://github.com/spyder-ide/qtpy">https://github.com/spyder-ide/qtpy</a> (255 個 stars) 的選擇. </p>
<p>對話: <a href="https://github.com/spyder-ide/qtpy/issues/69">https://github.com/spyder-ide/qtpy/issues/69</a> </p>
<h3>第一週分組程式</h3>
<p>"程式"中的"程"表示流程, 而"式"則指採用特定格式, 因此"程式"可以解釋為利用特定格式的語法來表達特定流程.</p>
<p>至於電腦程式 (或計算機程式), 則特指該流程是利用電腦執行, 而所謂的特定格式則指採用特定的計算機語言, 與本網誌相關的課程, 主要採用 Python, 其次還使用 Javascript, C/C++ 與 Lua 等程式語言.</p>
<p>學習計算機程式, 特定語言的語法與解題流程互為因果, 因此在過程中, 除了必須了解各程式語言的基本範式及語法外, 還需要針對解題流程中所使用的資料結構與演算法進行取捨, 對於中型以上程式, 還需選擇採用何種資料庫系統.</p>
<p>希望利用 Python 對各班學員亂數分組, 必須先了解如何讀進 (with 與 open 及 read) 各班的學員檔案, 設法將各學員的學號轉進數列 (包含利用 splitlines() , 然後導入 random, 並且了解 random.shuffle() 的用法.</p>
<p>接著在編寫學員亂數分組程式時, 則可按照下列流程配置上述各程式元件:</p>
<ol>
<li>讀進學員資料, 設法將各學員學號轉入數列</li>
<li>利用亂數模組中的 shuffle 函式, 隨機弄亂學員學號數列</li>
<li>利用重複迴圈, 從學員學號數列中一一取出, 準備進行分組</li>
<li>在迴圈中利用整數相除後取得餘數的規律, 依照每組幾人的規劃進行分組</li>
<li>在分組過程, 再設法利用數列的 append, 將各組學員學號納為分組數列</li>
<li>最後將各組數列再放入選課班級數列中備用</li>
</ol>
<p>本學期各班配合協同執行課程實習任務, 進行學員亂數分組, 以下為參考程式:</p>
<p><img alt="" height="534" src="/images/range.jpg" width="500"/></p>
<p><span>本學期除學員自評外, 加入各組學員互評機制, 請各組實際根據課程評量表單取回之資料, 以程式進行處理, 並提出此一評量機制可能帶來的問題與因應方案.</span></p>
<h2>Internship 2</h2>
<h4>學習要點</h4>
<p>此任務將逐一導入 <a href="http://www.coppeliarobotics.com/helpFiles/en/tutorials.htm">http://www.coppeliarobotics.com/helpFiles/en/tutorials.htm</a> 中的導引內容.</p>
<p>首先上場的是:</p>
<p><a href="http://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm">http://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm</a> </p>
<h4>各學員執行任務</h4>
<p>各學員完成上述 Tutorial 後, 請將個人心得放入個人的課程網頁中.</p>
<h4>分組專題</h4>
<p>請各組利用<span> </span><a href="https://www.onshape.com/">OnShape</a><span> </span>或其他 MCAD (Mechanical Computer Aided Design) 套件, 以協同模式建立手足球系統, 並將零組件輸入<span> </span><a href="http://www.coppeliarobotics.com/">V-rep</a>, 以建立可以兩兩競賽用的動態系統.</p>
<p>技術需求:</p>
<ol>
<li>建立系統所需的 3D 零組件 (利用<a href="https://www.onshape.com/"><span> </span>Onshape</a><span> </span>或其他 MCAD 套件完成)</li>
<li>將零組件轉入<a href="http://www.coppeliarobotics.com/"><span> </span>V-rep</a><span> </span>(轉入後是否需要簡化,? 如何簡化? 如何設定模擬參數?)</li>
<li>分辨運動 (<a href="https://en.wikipedia.org/wiki/Kinematics">Kinematics</a>) 模擬與動力 (<a href="https://en.wikipedia.org/wiki/Dynamics_(mechanics)">Dynamics</a>) 模擬的差異.</li>
<li>如何設定各操縱桿的平移軸 (Prismatic<span> </span><a href="http://www.coppeliarobotics.com/helpFiles/en/jointDescription.htm">Joint</a>) 運動?</li>
<li>如何設定各<span>操縱桿的旋轉軸 (Revolute<span> </span><a href="http://www.coppeliarobotics.com/helpFiles/en/jointDescription.htm">Joint</a>) 運動?</span></li>
<li><span>如何設定各人偶與足球之間的碰撞<a href="http://www.coppeliarobotics.com/helpFiles/en/shapeDynamicsProperties.htm">動力</a><a href="http://www.coppeliarobotics.com/helpFiles/en/designingDynamicSimulations.htm">擊球模擬</a><a href="http://www.coppeliarobotics.com/helpFiles/en/shapeDynamicsProperties.htm"></a>?</span></li>
<li>如何利用鍵盤中的字母鍵控制操縱桿的平移軸與旋轉軸</li>
<li>如何利用程式 (<a href="http://www.coppeliarobotics.com/helpFiles/en/luaCrashCourse.htm">Lua</a><span> </span>或<span> </span><a href="http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm">Python</a>) 控制<span>操縱桿的平移軸與旋轉軸</span></li>
<li><span>如何<a href="http://www.coppeliarobotics.com/helpFiles/en/proximitySensors.htm">感測</a>足球通過球門?</span></li>
<li>如何利用<span> </span><a href="http://www.coppeliarobotics.com/helpFiles/en/customUIPlugin.htm">Qt 表單</a>紀錄雙方得分?</li>
<li>人偶擊球受力時的應用分析, 可採用<span> </span><a href="https://github.com/Range-Software/range3">Range3</a><span> </span>進行分析.</li>
</ol>
<p><img alt="" height="410" src="/images/足球場尺寸.jpg" width="500"/></p>
<p><span>足球員尺寸:</span></p>
<p><span><img alt="" height="399" src="/images/足球員尺寸.jpg" width="500"/></span></p>
<p><span>足球尺寸: 36mm diameter; weighs 17 grams<br/><span>材料: ABS Plastic</span></span></p>
<h4>參考影片</h4>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/0qE_a0wFRa0" width="500"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/sD1xugH3fjA" width="500"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/up2pSZ2u0Ws" width="500"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8G6ERBz6BCc" width="500"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/heqV9_IAHV0" width="500"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/QzYcxTjRsPA" width="500"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/JPtW66z0-VQ" width="500"></iframe></p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/XJrNPjc2qMw" width="500"></iframe></p>
<h2>Internship 3</h2>
<h2>Internship 4</h2>
<h2>Internship 5</h2>
<h2>Internship 6</h2>
<h1>Weekly Progress</h1>
<p>以每一週組員所做的任務進度統整至此,再由負責維護網誌的組員推送</p>
<h2>Week4</h2>
<h2>Week5</h2>
<h2>Week6</h2>
<h2>Week7</h2>
<h2>Week8</h2>
<h2>Week9</h2>
<h1>Operation Demo</h1>
<h2>如何建立可攜程式系統</h2>
<h2>Start.bat製作</h2>
<h2>Stop.bat製作</h2>
<h2>Kungit 製作</h2><h1>Git http &amp; ssh</h1>
<p>利用 ssh 對 git 改版, 必須使用  home/.ssh/config 設定, 才能透過 proxy 伺服器進行連線, 由於在 IPv6 環境下, 必須要透過 proxy 才能對 Git 連線, 因此若無 config, 無法對遠端改版</p>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H 140.130.17.53:3128 %h %p

Host github.com
User git
Port 22
Hostname github.com

IdentityFile "y:\home\.ssh\id_rsa"

TCPKeepAlive yes
IdentitiesOnly yes

Host ssh.github.com
User git
Port 443
Hostname ssh.github.com

IdentityFile "y:\home\.ssh\id_rsa"

TCPKeepAlive yes
IdentitiesOnly yes</pre>
<p></p>
<h1>Directory Structure</h1>
<p>第二位想要編輯這裡</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/9A-hg32eD-s" width="560"></iframe></p>
<p>CMSimfly 的動態系統採用 Python3 + Flask 建構, 並且利用 Beatifulsoup 解讀位於 contig 目錄中的 content.htm 超文件檔案.</p>
<p>content.htm 檔案可以透過動態系統中的 generate_pages 功能, 將超文件轉為位於 content 目錄中的個別頁面檔案.</p>
<p>動態系統與靜態系統則共用 downloads, images, static 等目錄, 其中 downloads 目錄存放在動態系統上傳的文件檔, 而 images 目錄則存放動態系統所上傳的影像檔案, 包括 jpg, png 與 gif 等格式圖檔.</p>
<p>static 目錄則存放在動態與靜態系統所需要的 Javascript 或 Brython 程式檔.</p>
<p>還有這裡</p>
<p>首先修改這裡</p>
<p></p>
<h1>Page Editing</h1>
<p>CMSimfly 動態系統的網際編輯器採用 <a href="https://www.tiny.cloud/">TinyMCE4</a>, 可以放入一般超文件,  納入圖檔, 嵌入影片連結, 並且加入帶有行數的原始碼.</p>
<p>透過 File Upload 功能, 可以一次上傳多個檔案,  存入 downloads 目錄中儲存, 之後各頁面可以引入對應連結.</p>
<p>而圖檔的上傳與引用與一般檔案類似, 但上傳後存入 images 目錄中.</p>
<h2>插入程式碼</h2>
<p>CMSimfly 目前使用 Syntaxhighlighter 3.0.83:</p>
<p> <a href="http://alexgorbatchev.com/SyntaxHighlighter/">http://alexgorbatchev.com/SyntaxHighlighter/</a> </p>
<p>進行頁面中的程式碼高亮顯示.</p>
<h3>Java 程式碼</h3>
<pre class="brush:java;auto-links:false;toolbar:false" contenteditable="false">import java.util.Scanner;

public class Life {
    public static void show(boolean[][] grid){
        String s = "";
        for(boolean[] row : grid){
            for(boolean val : row)
                if(val)
                    s += "*";
                else
                    s += ".";
            s += "\n";
        }
        System.out.println(s);
    }
    
    public static boolean[][] gen(){
        boolean[][] grid = new boolean[10][10];
        for(int r = 0; r &lt; 10; r++)
            for(int c = 0; c &lt; 10; c++)
                if( Math.random() &gt; 0.7 )
                    grid[r][c] = true;
        return grid;
    }
    
    public static void main(String[] args){
        boolean[][] world = gen();
        show(world);
        System.out.println();
        world = nextGen(world);
        show(world);
        Scanner s = new Scanner(System.in);
        while(s.nextLine().length() == 0){
            System.out.println();
            world = nextGen(world);
            show(world);
            
        }
    }
    
    public static boolean[][] nextGen(boolean[][] world){
        boolean[][] newWorld 
            = new boolean[world.length][world[0].length];
        int num;
        for(int r = 0; r &lt; world.length; r++){
            for(int c = 0; c &lt; world[0].length; c++){
                num = numNeighbors(world, r, c);
                if( occupiedNext(num, world[r][c]) )
                    newWorld[r][c] = true;
            }
        }
        return newWorld;
    }
    
    public static boolean occupiedNext(int numNeighbors, boolean occupied){
        if( occupied &amp;&amp; (numNeighbors == 2 || numNeighbors == 3))
            return true;
        else if (!occupied &amp;&amp; numNeighbors == 3)
            return true;
        else
            return false;
    }

    private static int numNeighbors(boolean[][] world, int row, int col) {
        int num = world[row][col] ? -1 : 0;
        for(int r = row - 1; r &lt;= row + 1; r++)
            for(int c = col - 1; c &lt;= col + 1; c++)
                if( inbounds(world, r, c) &amp;&amp; world[r][c] )
                    num++;

        return num;
    }

    private static boolean inbounds(boolean[][] world, int r, int c) {
        return r &gt;= 0 &amp;&amp; r &lt; world.length &amp;&amp; c &gt;= 0 &amp;&amp;
        c &lt; world[0].length;
    }

}</pre>
<p></p>
<h3>Python 程式碼</h3>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def parse_content():
    """use bs4 and re module functions to parse content.htm"""
    #from pybean import Store, SQLiteWriter
    # if no content.db, create database file with cms table
    '''
    if not os.path.isfile(config_dir+"content.db"):
        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))
        cms = library.new("cms")
        cms.follow = 0
        cms.title = "head 1"
        cms.content = "content 1"
        cms.memo = "first memo"
        library.save(cms)
        library.commit()
    '''
    # if no content.htm, generate a head 1 and content 1 file
    if not os.path.isfile(config_dir+"content.htm"):
        # create content.htm if there is no content.htm
        File = open(config_dir + "content.htm", "w", encoding="utf-8")
        File.write("&lt;h1&gt;head 1&lt;/h1&gt;content 1")
        File.close()
    subject = file_get_contents(config_dir+"content.htm")
    # deal with content without content
    if subject == "":
        # create content.htm if there is no content.htm
        File = open(config_dir + "content.htm", "w", encoding="utf-8")
        File.write("&lt;h1&gt;head 1&lt;/h1&gt;content 1")
        File.close()
        subject = "&lt;h1&gt;head 1&lt;/h1&gt;content 1"
    # initialize the return lists
    head_list = []
    level_list = []
    page_list = []
    # make the soup out of the html content
    soup = bs4.BeautifulSoup(subject, 'html.parser')
    # 嘗試解讀各種情況下的標題
    soup = _remove_h123_attrs(soup)
    # 改寫 content.htm 後重新取 subject
    with open(config_dir + "content.htm", "wb") as f:
        f.write(soup.encode("utf-8"))
    subject = file_get_contents(config_dir+"content.htm")
    # get all h1, h2, h3 tags into list
    htag= soup.find_all(['h1', 'h2', 'h3'])
    n = len(htag)
    # get the page content to split subject using each h tag
    temp_data = subject.split(str(htag[0]))
    if len(temp_data) &gt; 2:
        subject = str(htag[0]).join(temp_data[1:])
    else:
        subject = temp_data[1]
    if n &gt;1:
            # i from 1 to i-1
            for i in range(1, len(htag)):
                head_list.append(htag[i-1].text.strip())
                # use name attribute of h* tag to get h1, h2 or h3
                # the number of h1, h2 or h3 is the level of page menu
                level_list.append(htag[i-1].name[1])
                temp_data = subject.split(str(htag[i]))
                if len(temp_data) &gt; 2:
                    subject = str(htag[i]).join(temp_data[1:])
                else:
                    subject = temp_data[1]
                # cut the other page content out of htag from 1 to i-1
                cut = temp_data[0]
                # add the page content
                page_list.append(cut)
    # last i
    # add the last page title
    head_list.append(htag[n-1].text.strip())
    # add the last level
    level_list.append(htag[n-1].name[1])
    temp_data = subject.split(str(htag[n-1]))
    # the last subject
    subject = temp_data[0]
    # cut the last page content out
    cut = temp_data[0]
    # the last page content
    page_list.append(cut)
    return head_list, level_list, page_list

</pre>
<p></p>
<h3>C或C++程式碼</h3>
<p>請注意, 目前 CMSimfly 標題內文無法解讀 "/" 符號, 因此若本頁面的標題為  "C/C++程式碼", 則無法進行分頁.</p>
<pre class="brush:cpp;auto-links:false;toolbar:false" contenteditable="false">/* Runge Kutta for a set of first order differential equations */
 
#include &lt;stdio.h&gt;
#include &lt;math.h&gt;
 
#define N 2 /* number of first order equations */
#define dist 0.1 /* stepsize in t*/
#define MAX 30.0 /* max for t */
 
FILE *output; /* internal filename */
FILE *output1; /* internal filename */
// 利用 pipe 呼叫 gnuplot 繪圖
FILE *pipe;
 
void runge4(double x, double y[], double step); /* Runge-Kutta function */
double f(double x, double y[], int i); /* function for derivatives */
 
void main(){
 
  double t, y[N];
  int j;
 
  output=fopen("osc.dat", "w"); /* external filename */
  output1=fopen("osc1.dat", "w"); /* external filename */
 
  y[0]=1.0; /* initial position */
  y[1]=0.0; /* initial velocity */
 
  //fprintf(output, "0\t%f\n", y[0]);
 
  for (j=1; j*dist&lt;=MAX ;j++) /* time loop */{
 
    t=j*dist;
    runge4(t, y, dist);
    fprintf(output, "%f\t%f\n", t, y[0]);
    fprintf(output1, "%f\t%f\n", t, y[1]);
  }
 
  fclose(output);
  fclose(output1);
 
  pipe = popen("gnuplot -persist","w");
  //fprintf(pipe,"set term png enhanced font \"v:/fireflysung.ttf\" 18 \n");
  fprintf(pipe,"set term png enhanced font \"y:/wqy-microhei.ttc\" 18 \n");
  //fprintf(pipe,"set yrange [68:70]\n");
  fprintf(pipe,"set output \"test.png\"\n");
  fprintf(pipe, "plot \"osc.dat\" title \"位移\" with lines, \"osc1.dat\" title \"速度\" with lines\n");
  fprintf(pipe,"quit\n");

  fprintf(pipe,"quit\n");
  pclose(pipe);
}
 
void runge4(double x, double y[], double step){
 
  double h=step/2.0, /* the midpoint */
  t1[N], t2[N], t3[N], /* temporary storage arrays */
  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */
  int i;
 
  for (i=0;i&lt;N;i++){
 
    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));
  }
 
  for (i=0;i&lt;N;i++){
 
    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));
  }
 
  for (i=0;i&lt;N;i++){
 
    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));
  }
 
  for (i=0;i&lt;N;i++){
 
    k4[i]= step*f(x+step, t3, i);
  }
 
  for (i=0;i&lt;N;i++){
 
    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;
  }
}
 
double f(double x, double y[], int i){
 
  if (i==0)
    x=y[1]; /* derivative of first equation */
  if (i==1)
    x=-y[0]-0.5*y[1];
  return x;
}</pre>
<p></p>
<h3>Lua 程式碼</h3>
<pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- 導入 js 模組
js = require("js")
-- 取得 window
window = js.global
-- 猜小於或等於 n 的整數
big = 100
-- 計算猜測次數, 配合 while 至少會猜一次
num = 1
-- 利用 window:prompt 方法回應取得使用者所猜的整數
guess = window:prompt("請猜一個介於 1 到 "..big.." 的整數")
-- 利用數學模組的 random 函數以亂數產生答案
answer = math.random(big)
output = ""
-- 若沒猜對, 一直猜到對為止
while answer ~= tonumber(guess) do
    if answer &gt; tonumber(guess) then
        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too small"
        print(output)
    else
        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too big"
        print(output)
    end 
    guess = window:prompt(output..", 請猜一個介於 1 到 "..big.." 的整數")
    num = num + 1
end
print("總共猜了 "..num.." 次, answer=guess="..answer.." - correct")
    </pre>
<p></p>
<h3>Javascript 程式碼</h3>
<pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">STLViewer = function(stlpath, plotarea) {

	var mycanvas = document.getElementById(plotarea);
	var viewer = new JSC3D.Viewer(mycanvas)
	var theScene = new JSC3D.Scene;
	////Initialize with a default file:
	//var stlpath = "../../../assets/2013-10-23/stl/box.STL"
	//var stlpath = "../../../assets/2013-10-23/stl/taj.stl"
	viewer.setParameter('SceneUrl', stlpath);
    viewer.setParameter('InitRotationX', 20);
	viewer.setParameter('InitRotationY', 20);
	viewer.setParameter('InitRotationZ', 0);
	viewer.setParameter('ModelColor', '#CAA618');
	viewer.setParameter('BackgroundColor1', '#FFFFFF');
	viewer.setParameter('BackgroundColor2', '#383840');
	viewer.init();
	viewer.update();
	////init done
	var canvas_drop = document.getElementById('canvas-drop')
	/*var dropzone = document.getElementById('dropzone')
	dropzone.addEventListener('dragover', handleDragOver, false);
	dropzone.addEventListener('drop', handleFileSelect, false); */
	canvas_drop.addEventListener('dragover', handleDragOver, false);
	canvas_drop.addEventListener('drop', handleFileSelect, false);

////Drag and drop logic:
	function handleFileSelect(evt) {
	    evt.stopPropagation();
	    evt.preventDefault();
	    var files = evt.dataTransfer.files;
	    console.log(evt)
	    console.log(files)
	    preview_stl(files[0])
	  }

	  function handleDragOver(evt) {
	    evt.stopPropagation();
	    evt.preventDefault();
	    evt.dataTransfer.dropEffect = 'copy';
	  }

////jsc3d logic
	var handle_file_select = function(e) {
		e.stopPropagation()
		e.preventDefault()
		var f = e.target.files[0]
		preview_stl(f)
	}

	function preview_stl(f) {
		var reader = new FileReader()
		var ext = f.name.split(".")[1]

		function setup_viewer() {
			viewer.setParameter('InitRotationX', 20);
			viewer.setParameter('InitRotationY', 20);
			viewer.setParameter('InitRotationZ', 0);
			viewer.setParameter('ModelColor', '#CAA618');
			viewer.setParameter('BackgroundColor1', '#FFFFFF');
			viewer.setParameter('BackgroundColor2', '#383840');
			viewer.setParameter('RenderMode', "flat");
		}
		setup_viewer()

		reader.onload = (function(file) {
			return function(e) {
				theScene = new JSC3D.Scene
		    	stl_loader = new JSC3D.StlLoader()
		    	stl_loader.parseStl(theScene, e.target.result)
		      	//viewer.init()
		      	viewer.replaceScene(theScene)
		      	viewer.update()
		      	console.log("file reader onload")
			}
		})(f)

		if (ext.toLowerCase() != "stl") {
			alert("That doesn't appear to be an STL file.");
		} else {
			reader.readAsBinaryString(f)
		}
	}
}
</pre>
<p></p>
<h3>Html 原始碼</h3>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;html&gt;
   &lt;head&gt;
      &lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;
      &lt;title&gt;CMSimfly&lt;/title&gt;
      &lt;link rel="stylesheet" type="text/css" href="/static/cmsimply.css"&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;div class='container'&gt;
      &lt;nav&gt;
         &lt;ul id='css3menu1' class='topmenu'&gt;
            &lt;li&gt;&lt;a href='/get_page/簡介'&gt;簡介&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/目錄結構'&gt;目錄結構&lt;/a&gt;
            &lt;li&gt;
               &lt;a href='/get_page/頁面編輯'&gt;頁面編輯&lt;/a&gt;
               &lt;ul&gt;
                  &lt;li&gt;
                     &lt;a href='/get_page/插入程式碼'&gt;插入程式碼&lt;/a&gt;
                     &lt;ul&gt;
                        &lt;li&gt;&lt;a href='/get_page/Java 程式碼'&gt;Java 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Python 程式碼'&gt;Python 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/C或C++程式碼'&gt;C或C++程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Lua 程式碼'&gt;Lua 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Javascript 程式碼'&gt;Javascript 程式碼&lt;/a&gt;
                        &lt;li&gt;&lt;a href='/get_page/Html 原始碼'&gt;Html 原始碼&lt;/a&gt;&lt;/li&gt;
                        &lt;/li&gt;
                     &lt;/ul&gt;
               &lt;/ul&gt;
            &lt;li&gt;&lt;a href='/get_page/網際簡報'&gt;網際簡報&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/網誌編輯'&gt;網誌編輯&lt;/a&gt;
            &lt;li&gt;&lt;a href='/get_page/已知錯誤'&gt;已知錯誤&lt;/a&gt;&lt;/li&gt;
         &lt;/ul&gt;
      &lt;/nav&gt;
      &lt;section&gt;
         &lt;form method='post' action='/ssavePage'&gt;
         &lt;textarea class='simply-editor' name='page_content' cols='50' rows='15'&gt;&lt;h3&gt;Html 原始碼&lt;/h3&gt;&lt;/textarea&gt;
         &lt;input type='hidden' name='page_order' value='9'&gt;
         &lt;input type='submit' value='save'&gt;
         &lt;input type=button onClick="location.href='/get_page/Html 原始碼'" value='viewpage'&gt;
         &lt;/form&gt;
      &lt;/section&gt;
   &lt;/body&gt;
&lt;/html&gt;
COPY TO CLIPBOARD	</pre>
<p></p>
<h1>Internet Reveal</h1>
<p>CMSimfly 中採用 <a href="https://revealjs.com/#/">Reveal.js</a> 作為網際簡報, 其中的維護檔案位於 config/reveal.js, 而對應的簡報檔案則位於 reveal 目錄中.</p>
<h1>Blog Editor</h1>
<p>CMSimfly 採用 <a href="https://blog.getpelican.com/">Pelican blog</a> 系統, 編輯檔案位於 config/pelican.leo, 對應的</p>
<p> Markdown 原始檔案位於 markdown 目錄中, 而經 Pelican 轉換出的網誌超文件檔案則位於 blog 目錄中.</p>
<p>其餘在網誌文章中所需要的 Javascript 或 Brython 程式檔案, 則與 CMSimfly 及 Reveal.js 共用, 位於 static 目錄下.</p>
<p>上傳檔案與圖檔的引用則與 CMSimfly 架構相同.</p>
<p>第二位搶這裡也是不遺餘力</p>
<p><iframe allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/KZnCu1Sq1vo" width="560"></iframe></p>
<p>就是這樣編輯的</p>
<p>接下來修改這裡</p>
<p></p>
<h1>Issue &amp; Solution</h1>
<p><strong>Issue 1: </strong>全部頁面會因無法正確解讀而誤刪<span>。</span></p>
<p><strong>Solution 1: </strong>在特定情況下, 系統會誤刪 config/content.htm 檔案, 目前在單頁或全部頁面編輯存檔之前, 或將上一版本的 content.htm 存入 content_back.htm, 若 content.htm 內容被程式誤刪, 可以利用備份檔案複製回原始內容後, 再進行後續處理<span>。</span></p>
<p><strong>Issue 2: </strong>頁面標題不支援特殊符號<span>。</span></p>
<p><strong>Solution 2: </strong>各頁面標題目前不支援特殊符號, 例如: "/", "?" 等, 若已經發生程式無法解讀頁面的情況, 只能從編輯 config/content.htm 下手, 若系統位於遠端, 則後續必須要再設法提供一個額外的編輯 config/content.htm 檔案的網際連結功能<span>。</span></p>
<p><strong>Issue 3: </strong>Video 引用不支援內部引用<span>。</span></p>
<p><strong>Solution 3: </strong>tinymce 中插入 video 的小視窗, 要移除引用的圖像與連結, 因為一般建議不要在內容中存入 .mp4 的影片資料, 而只接受引入影片 URL 連結<span>。</span></p>
<p><strong>Issue 4: </strong>在分組網站上Geometry的網頁跑掉。</p>
<p><strong>Solution 4: </strong>由於Geometry的網頁設定的Formats裡面的Headings設定有錯誤，只要把Headings設定重新用過一次即可。</p>
<h1>Experience</h1>
<h2>40623210</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<h2>40623224</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<h2>40623225</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<h2>40623226</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<h2>40623227</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<h2>40623234</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<h2>40623238</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<h2>40623239</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<h2>40423158</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<h2>40423232</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<h2>40423237</h2>
<p>Week4 心得</p>
<p><span>Week5 心得</span></p>
<p><span>Week6 心得</span></p>
<p><span>Week7 心得</span></p>
<p><span>Week8 心得</span></p>
<p><span>Week9 心得</span></p>
<p><span></span></p>