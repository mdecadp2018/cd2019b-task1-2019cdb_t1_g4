var tipuesearch = {"pages": [{'title': 'Introduction', 'text': 'Department of Mechanical Design Engineering 2019 Spring Introduction to Collaborative Product Design Practice \n BG4\xa0Product collaboration design\xa0 Warehousing  Website \n Reveal \n Blog \n \n 評量方式與標準: \n 評分比例: \n 學員出席 (20%) \n Github 倉儲管理\xa0 (20%) \n Onshape 協同操作 (20%) \n V-rep 模擬 (20%) \n 程式開發 (20%) \n 評分方式: \n CD 每週自評與互評表單:\xa0 https://goo.gl/forms/qtk5fxdeGYHCeI1M2 \xa0 \n 學員自我評量 \xa0(30%) \n 分組自我評量 (30%) \n 倉儲歷程查驗 (40%) \n 教學方式: \n 課堂講授 \n 操作錄影 \n 學員實習 \n 分組報告', 'tags': '', 'url': 'Introduction.html'}, {'title': 'Group Member', 'text': 'Team\xa0Leader:\xa0 \n 鐘偉哲\xa0 40623224 \n Member: \n 翁嘉宏\xa0 40623210 \n 卓昆鋒\xa0 40623225 \n 鄭清銓\xa0 40623226 \n 張耀元\xa0 40623227 \n 洪一木\xa0 40623234 \n 許筌翔\xa0 40623238 \n 許登貴\xa0 40623239 \n 莊子慶\xa0 40423158 \n 郭金豪\xa0 40423232 \n 陳憲棠\xa0 40423237 \n', 'tags': '', 'url': 'Group Member.html'}, {'title': 'Internship', 'text': '每週各分組組員必須將參與分組協同過程之電腦操作流程, 並嵌入各分組網站頁面中. \n', 'tags': '', 'url': 'Internship.html'}, {'title': 'Internship 1', 'text': '學習要點 \n 本學期的課程將從各學員自行製作可攜程式系統開始, 讓各學員以團隊協同的方式整理資料, 並且推選代表進行簡報. \n 此外, 透過 ungit 的導入, 讓 git 與 github 在圖形化介面與中文提交訊息的交互應用下, 能夠更加提升學習效果. \n 最後, 本學期希望能改寫 \xa0 Pygrouf \xa0 成為合用的網際同儕互評暨自評系統. \n 各學員執行任務 \n 請根據\xa0 http://mde.tw/wcm2019/content/實習項目二.html \xa0中的說明: \n \n 自行建立一套可攜程式系統, 並將過程製作成 3~5 分鐘的簡報, 各班每十號推選一名代表利用課堂時間進行簡報說明. \n 請設法利用 ungit 管理自己的協同產品設計實習課程網頁 (格式自選, 系統自選). \n \n 請以各班每十號為一組, 研讀 Git 教材:\xa0 https://git-scm.com/book/zh-tw/v2 \xa0並各自執行下列教材後, 推選一名代表利用課堂時間進行 3~5 分鐘的內容簡報說明. \n Github 教材:\xa0 https://lab.github.com/ \xa0 (已經以 scrum-1 帳號開始 學習流程 ) \n \n \n 學習成果驗收 \n \n 各學員確實閱讀\xa0 http://mde.tw/wcm2019/content/實習項目二.html \xa0中的說明, 並學會自行製作可攜程式系統. \n 各學員確實研讀 Git 教材:\xa0 https://git-scm.com/book/zh-tw/v2 \xa0內容, 能夠整理出 3~5 分鐘的簡報. \n 各學員確實執行\xa0 https://lab.github.com/ \xa0 中的導引內容, 並能夠整理出 3~5 分鐘的簡報. \n \n', 'tags': '', 'url': 'Internship 1.html'}, {'title': '隨身系統', 'text': '建立可攜程式系統 \n 操作影片 \n 安裝 Python 3.7.2 \n 修改 Scripts/pip.exe 中的系統連結設定 \n HxD:\xa0 https://mh-nexus.de/en/hxd/ \xa0 \n 納入相關工具 \n 利用 pip 安裝或移除 Python 模組 \n 不同 home 的啟動設置 \n https://github.com/mottosso/Qt.py \xa0(439 個 stars) 與\xa0 https://github.com/spyder-ide/qtpy \xa0(255 個 stars) 的選擇.\xa0 \n 對話:\xa0 https://github.com/spyder-ide/qtpy/issues/69 \xa0 \n', 'tags': '', 'url': '隨身系統.html'}, {'title': '第一週分組程式', 'text': '"程式"中的"程"表示流程, 而"式"則指採用特定格式, 因此"程式"可以解釋為利用特定格式的語法來表達特定流程. \n 至於電腦程式 (或計算機程式), 則特指該流程是利用電腦執行, 而所謂的特定格式則指採用特定的計算機語言, 與本網誌相關的課程, 主要採用 Python, 其次還使用 Javascript, C/C++ 與 Lua 等程式語言. \n 學習計算機程式, 特定語言的語法與解題流程互為因果, 因此在過程中, 除了必須了解各程式語言的基本範式及語法外, 還需要針對解題流程中所使用的資料結構與演算法進行取捨, 對於中型以上程式, 還需選擇採用何種資料庫系統. \n 希望利用 Python 對各班學員亂數分組, 必須先了解如何讀進 (with 與 open 及 read) 各班的學員檔案, 設法將各學員的學號轉進數列 (包含利用 splitlines() , 然後導入 random, 並且了解 random.shuffle() 的用法. \n 接著在編寫學員亂數分組程式時, 則可按照下列流程配置上述各程式元件: \n \n 讀進學員資料, 設法將各學員學號轉入數列 \n 利用亂數模組中的 shuffle 函式, 隨機弄亂學員學號數列 \n 利用重複迴圈, 從學員學號數列中一一取出, 準備進行分組 \n 在迴圈中利用整數相除後取得餘數的規律, 依照每組幾人的規劃進行分組 \n 在分組過程, 再設法利用數列的 append, 將各組學員學號納為分組數列 \n 最後將各組數列再放入選課班級數列中備用 \n \n 本學期各班配合協同執行課程實習任務, 進行學員亂數分組, 以下為參考程式: \n \n 本學期除學員自評外, 加入各組學員互評機制, 請各組實際根據課程評量表單取回之資料, 以程式進行處理, 並提出此一評量機制可能帶來的問題與因應方案. \n', 'tags': '', 'url': '第一週分組程式.html'}, {'title': 'Internship 2', 'text': '學習要點 \n 此任務將逐一導入\xa0 http://www.coppeliarobotics.com/helpFiles/en/tutorials.htm \xa0中的導引內容. \n 首先上場的是: \n http://www.coppeliarobotics.com/helpFiles/en/bubbleRobTutorial.htm \xa0 \n 各學員執行任務 \n 各學員完成上述 Tutorial 後, 請將個人心得放入個人的課程網頁中. \n 分組專題 \n 請各組利用 \xa0 OnShape \xa0 或其他 MCAD (Mechanical Computer Aided Design) 套件, 以協同模式建立手足球系統, 並將零組件輸入 \xa0 V-rep , 以建立可以兩兩競賽用的動態系統. \n 技術需求: \n \n 建立系統所需的 3D 零組件 (利用 \xa0 Onshape \xa0 或其他 MCAD 套件完成) \n 將零組件轉入 \xa0 V-rep \xa0 (轉入後是否需要簡化,? 如何簡化? 如何設定模擬參數?) \n 分辨運動 ( Kinematics ) 模擬與動力 ( Dynamics ) 模擬的差異. \n 如何設定各操縱桿的平移軸 (Prismatic \xa0 Joint ) 運動? \n 如何設定各 操縱桿的旋轉軸 (Revolute \xa0 Joint ) 運動? \n 如何設定各人偶與足球之間的碰撞 動力 擊球模擬 ? \n 如何利用鍵盤中的字母鍵控制操縱桿的平移軸與旋轉軸 \n 如何利用程式 ( Lua \xa0 或 \xa0 Python ) 控制 操縱桿的平移軸與旋轉軸 \n 如何 感測 足球通過球門? \n 如何利用 \xa0 Qt 表單 紀錄雙方得分? \n 人偶擊球受力時的應用分析, 可採用 \xa0 Range3 \xa0 進行分析. \n \n \n 足球員尺寸: \n \n 足球尺寸: 36mm diameter; weighs 17 grams 材料: ABS Plastic \n 參考影片 \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'Internship 2.html'}, {'title': 'Internship 3', 'text': '', 'tags': '', 'url': 'Internship 3.html'}, {'title': 'Internship 4', 'text': '', 'tags': '', 'url': 'Internship 4.html'}, {'title': 'Internship 5', 'text': '', 'tags': '', 'url': 'Internship 5.html'}, {'title': 'Internship 6', 'text': '', 'tags': '', 'url': 'Internship 6.html'}, {'title': 'Weekly Progress', 'text': '以每一週組員所做的任務進度統整至此,再由負責維護網誌的組員推送 \n', 'tags': '', 'url': 'Weekly Progress.html'}, {'title': 'Week4', 'text': '', 'tags': '', 'url': 'Week4.html'}, {'title': 'Week5', 'text': '', 'tags': '', 'url': 'Week5.html'}, {'title': 'Week6', 'text': '', 'tags': '', 'url': 'Week6.html'}, {'title': 'Week7', 'text': '', 'tags': '', 'url': 'Week7.html'}, {'title': 'Week8', 'text': '', 'tags': '', 'url': 'Week8.html'}, {'title': 'Week9', 'text': '', 'tags': '', 'url': 'Week9.html'}, {'title': 'Operation Demo', 'text': '', 'tags': '', 'url': 'Operation Demo.html'}, {'title': '如何建立可攜程式系統', 'text': '', 'tags': '', 'url': '如何建立可攜程式系統.html'}, {'title': 'Start.bat製作', 'text': '', 'tags': '', 'url': 'Start.bat製作.html'}, {'title': 'Stop.bat製作', 'text': '', 'tags': '', 'url': 'Stop.bat製作.html'}, {'title': 'Ungit 製作', 'text': '', 'tags': '', 'url': 'Ungit 製作.html'}, {'title': 'Git http\xa0& ssh', 'text': '利用 ssh 對 git 改版, 必須使用\xa0 home/.ssh/config 設定, 才能透過 proxy 伺服器進行連線, 由於在 IPv6 環境下, 必須要透過 proxy 才能對 Git 連線, 因此若無 config, 無法對遠端改版 \n ProxyCommand y:/PortableGit/mingw64/bin/connect.exe -H 140.130.17.53:3128 %h %p\n\nHost github.com\nUser git\nPort 22\nHostname github.com\n\nIdentityFile "y:\\home\\.ssh\\id_rsa"\n\nTCPKeepAlive yes\nIdentitiesOnly yes\n\nHost ssh.github.com\nUser git\nPort 443\nHostname ssh.github.com\n\nIdentityFile "y:\\home\\.ssh\\id_rsa"\n\nTCPKeepAlive yes\nIdentitiesOnly yes \n \n', 'tags': '', 'url': 'Git http\xa0& ssh.html'}, {'title': 'Directory Structure', 'text': '第二位想要編輯這裡 \n \n CMSimfly 的動態系統採用 Python3 + Flask 建構, 並且利用 Beatifulsoup 解讀位於 contig 目錄中的 content.htm 超文件檔案. \n content.htm 檔案可以透過動態系統中的 generate_pages 功能, 將超文件轉為位於 content 目錄中的個別頁面檔案. \n 動態系統與靜態系統則共用 downloads, images, static 等目錄, 其中 downloads 目錄存放在動態系統上傳的文件檔, 而 images 目錄則存放動態系統所上傳的影像檔案, 包括 jpg, png 與 gif 等格式圖檔. \n static 目錄則存放在動態與靜態系統所需要的 Javascript 或 Brython 程式檔. \n 還有這裡 \n 首先修改這裡 \n \n', 'tags': '', 'url': 'Directory Structure.html'}, {'title': 'Page Editing', 'text': 'CMSimfly 動態系統的網際編輯器採用  TinyMCE4 , 可以放入一般超文件,\xa0 納入圖檔, 嵌入影片連結, 並且加入帶有行數的原始碼. \n 透過 File Upload 功能, 可以一次上傳多個檔案,\xa0 存入 downloads 目錄中儲存, 之後各頁面可以引入對應連結. \n 而圖檔的上傳與引用與一般檔案類似, 但上傳後存入 images 目錄中. \n', 'tags': '', 'url': 'Page Editing.html'}, {'title': '插入程式碼', 'text': 'CMSimfly 目前使用 Syntaxhighlighter 3.0.83: \n \xa0 http://alexgorbatchev.com/SyntaxHighlighter/ \xa0 \n 進行頁面中的程式碼高亮顯示. \n', 'tags': '', 'url': '插入程式碼.html'}, {'title': 'Java 程式碼', 'text': 'import java.util.Scanner;\n\npublic class Life {\n    public static void show(boolean[][] grid){\n        String s = "";\n        for(boolean[] row : grid){\n            for(boolean val : row)\n                if(val)\n                    s += "*";\n                else\n                    s += ".";\n            s += "\\n";\n        }\n        System.out.println(s);\n    }\n    \n    public static boolean[][] gen(){\n        boolean[][] grid = new boolean[10][10];\n        for(int r = 0; r < 10; r++)\n            for(int c = 0; c < 10; c++)\n                if( Math.random() > 0.7 )\n                    grid[r][c] = true;\n        return grid;\n    }\n    \n    public static void main(String[] args){\n        boolean[][] world = gen();\n        show(world);\n        System.out.println();\n        world = nextGen(world);\n        show(world);\n        Scanner s = new Scanner(System.in);\n        while(s.nextLine().length() == 0){\n            System.out.println();\n            world = nextGen(world);\n            show(world);\n            \n        }\n    }\n    \n    public static boolean[][] nextGen(boolean[][] world){\n        boolean[][] newWorld \n            = new boolean[world.length][world[0].length];\n        int num;\n        for(int r = 0; r < world.length; r++){\n            for(int c = 0; c < world[0].length; c++){\n                num = numNeighbors(world, r, c);\n                if( occupiedNext(num, world[r][c]) )\n                    newWorld[r][c] = true;\n            }\n        }\n        return newWorld;\n    }\n    \n    public static boolean occupiedNext(int numNeighbors, boolean occupied){\n        if( occupied && (numNeighbors == 2 || numNeighbors == 3))\n            return true;\n        else if (!occupied && numNeighbors == 3)\n            return true;\n        else\n            return false;\n    }\n\n    private static int numNeighbors(boolean[][] world, int row, int col) {\n        int num = world[row][col] ? -1 : 0;\n        for(int r = row - 1; r <= row + 1; r++)\n            for(int c = col - 1; c <= col + 1; c++)\n                if( inbounds(world, r, c) && world[r][c] )\n                    num++;\n\n        return num;\n    }\n\n    private static boolean inbounds(boolean[][] world, int r, int c) {\n        return r >= 0 && r < world.length && c >= 0 &&\n        c < world[0].length;\n    }\n\n} \n \n', 'tags': '', 'url': 'Java 程式碼.html'}, {'title': 'Python 程式碼', 'text': 'def parse_content():\n    """use bs4 and re module functions to parse content.htm"""\n    #from pybean import Store, SQLiteWriter\n    # if no content.db, create database file with cms table\n    \'\'\'\n    if not os.path.isfile(config_dir+"content.db"):\n        library = Store(SQLiteWriter(config_dir+"content.db", frozen=False))\n        cms = library.new("cms")\n        cms.follow = 0\n        cms.title = "head 1"\n        cms.content = "content 1"\n        cms.memo = "first memo"\n        library.save(cms)\n        library.commit()\n    \'\'\'\n    # if no content.htm, generate a head 1 and content 1 file\n    if not os.path.isfile(config_dir+"content.htm"):\n        # create content.htm if there is no content.htm\n        File = open(config_dir + "content.htm", "w", encoding="utf-8")\n        File.write("<h1>head 1</h1>content 1")\n        File.close()\n    subject = file_get_contents(config_dir+"content.htm")\n    # deal with content without content\n    if subject == "":\n        # create content.htm if there is no content.htm\n        File = open(config_dir + "content.htm", "w", encoding="utf-8")\n        File.write("<h1>head 1</h1>content 1")\n        File.close()\n        subject = "<h1>head 1</h1>content 1"\n    # initialize the return lists\n    head_list = []\n    level_list = []\n    page_list = []\n    # make the soup out of the html content\n    soup = bs4.BeautifulSoup(subject, \'html.parser\')\n    # 嘗試解讀各種情況下的標題\n    soup = _remove_h123_attrs(soup)\n    # 改寫 content.htm 後重新取 subject\n    with open(config_dir + "content.htm", "wb") as f:\n        f.write(soup.encode("utf-8"))\n    subject = file_get_contents(config_dir+"content.htm")\n    # get all h1, h2, h3 tags into list\n    htag= soup.find_all([\'h1\', \'h2\', \'h3\'])\n    n = len(htag)\n    # get the page content to split subject using each h tag\n    temp_data = subject.split(str(htag[0]))\n    if len(temp_data) > 2:\n        subject = str(htag[0]).join(temp_data[1:])\n    else:\n        subject = temp_data[1]\n    if n >1:\n            # i from 1 to i-1\n            for i in range(1, len(htag)):\n                head_list.append(htag[i-1].text.strip())\n                # use name attribute of h* tag to get h1, h2 or h3\n                # the number of h1, h2 or h3 is the level of page menu\n                level_list.append(htag[i-1].name[1])\n                temp_data = subject.split(str(htag[i]))\n                if len(temp_data) > 2:\n                    subject = str(htag[i]).join(temp_data[1:])\n                else:\n                    subject = temp_data[1]\n                # cut the other page content out of htag from 1 to i-1\n                cut = temp_data[0]\n                # add the page content\n                page_list.append(cut)\n    # last i\n    # add the last page title\n    head_list.append(htag[n-1].text.strip())\n    # add the last level\n    level_list.append(htag[n-1].name[1])\n    temp_data = subject.split(str(htag[n-1]))\n    # the last subject\n    subject = temp_data[0]\n    # cut the last page content out\n    cut = temp_data[0]\n    # the last page content\n    page_list.append(cut)\n    return head_list, level_list, page_list\n\n \n \n', 'tags': '', 'url': 'Python 程式碼.html'}, {'title': 'C或C++程式碼', 'text': '請注意, 目前 CMSimfly 標題內文無法解讀 "/" 符號, 因此若本頁面的標題為\xa0 "C/C++程式碼", 則無法進行分頁. \n /* Runge Kutta for a set of first order differential equations */\n \n#include <stdio.h>\n#include <math.h>\n \n#define N 2 /* number of first order equations */\n#define dist 0.1 /* stepsize in t*/\n#define MAX 30.0 /* max for t */\n \nFILE *output; /* internal filename */\nFILE *output1; /* internal filename */\n// 利用 pipe 呼叫 gnuplot 繪圖\nFILE *pipe;\n \nvoid runge4(double x, double y[], double step); /* Runge-Kutta function */\ndouble f(double x, double y[], int i); /* function for derivatives */\n \nvoid main(){\n \n  double t, y[N];\n  int j;\n \n  output=fopen("osc.dat", "w"); /* external filename */\n  output1=fopen("osc1.dat", "w"); /* external filename */\n \n  y[0]=1.0; /* initial position */\n  y[1]=0.0; /* initial velocity */\n \n  //fprintf(output, "0\\t%f\\n", y[0]);\n \n  for (j=1; j*dist<=MAX ;j++) /* time loop */{\n \n    t=j*dist;\n    runge4(t, y, dist);\n    fprintf(output, "%f\\t%f\\n", t, y[0]);\n    fprintf(output1, "%f\\t%f\\n", t, y[1]);\n  }\n \n  fclose(output);\n  fclose(output1);\n \n  pipe = popen("gnuplot -persist","w");\n  //fprintf(pipe,"set term png enhanced font \\"v:/fireflysung.ttf\\" 18 \\n");\n  fprintf(pipe,"set term png enhanced font \\"y:/wqy-microhei.ttc\\" 18 \\n");\n  //fprintf(pipe,"set yrange [68:70]\\n");\n  fprintf(pipe,"set output \\"test.png\\"\\n");\n  fprintf(pipe, "plot \\"osc.dat\\" title \\"位移\\" with lines, \\"osc1.dat\\" title \\"速度\\" with lines\\n");\n  fprintf(pipe,"quit\\n");\n\n  fprintf(pipe,"quit\\n");\n  pclose(pipe);\n}\n \nvoid runge4(double x, double y[], double step){\n \n  double h=step/2.0, /* the midpoint */\n  t1[N], t2[N], t3[N], /* temporary storage arrays */\n  k1[N], k2[N], k3[N],k4[N]; /* for Runge-Kutta */\n  int i;\n \n  for (i=0;i<N;i++){\n \n    t1[i]=y[i]+0.5*(k1[i]=step*f(x,y,i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t2[i]=y[i]+0.5*(k2[i]=step*f(x+h, t1, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    t3[i]=y[i]+ (k3[i]=step*f(x+h, t2, i));\n  }\n \n  for (i=0;i<N;i++){\n \n    k4[i]= step*f(x+step, t3, i);\n  }\n \n  for (i=0;i<N;i++){\n \n    y[i]+=(k1[i]+2*k2[i]+2*k3[i]+k4[i])/6.0;\n  }\n}\n \ndouble f(double x, double y[], int i){\n \n  if (i==0)\n    x=y[1]; /* derivative of first equation */\n  if (i==1)\n    x=-y[0]-0.5*y[1];\n  return x;\n} \n \n', 'tags': '', 'url': 'C或C++程式碼.html'}, {'title': 'Lua 程式碼', 'text': '-- 導入 js 模組\njs = require("js")\n-- 取得 window\nwindow = js.global\n-- 猜小於或等於 n 的整數\nbig = 100\n-- 計算猜測次數, 配合 while 至少會猜一次\nnum = 1\n-- 利用 window:prompt 方法回應取得使用者所猜的整數\nguess = window:prompt("請猜一個介於 1 到 "..big.." 的整數")\n-- 利用數學模組的 random 函數以亂數產生答案\nanswer = math.random(big)\noutput = ""\n-- 若沒猜對, 一直猜到對為止\nwhile answer ~= tonumber(guess) do\n    if answer > tonumber(guess) then\n        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too small"\n        print(output)\n    else\n        output = "猜第 "..num.." 次, guess="..guess..", answer="..answer.." - too big"\n        print(output)\n    end \n    guess = window:prompt(output..", 請猜一個介於 1 到 "..big.." 的整數")\n    num = num + 1\nend\nprint("總共猜了 "..num.." 次, answer=guess="..answer.." - correct")\n     \n \n', 'tags': '', 'url': 'Lua 程式碼.html'}, {'title': 'Javascript 程式碼', 'text': 'STLViewer = function(stlpath, plotarea) {\n\n\tvar mycanvas = document.getElementById(plotarea);\n\tvar viewer = new JSC3D.Viewer(mycanvas)\n\tvar theScene = new JSC3D.Scene;\n\t////Initialize with a default file:\n\t//var stlpath = "../../../assets/2013-10-23/stl/box.STL"\n\t//var stlpath = "../../../assets/2013-10-23/stl/taj.stl"\n\tviewer.setParameter(\'SceneUrl\', stlpath);\n    viewer.setParameter(\'InitRotationX\', 20);\n\tviewer.setParameter(\'InitRotationY\', 20);\n\tviewer.setParameter(\'InitRotationZ\', 0);\n\tviewer.setParameter(\'ModelColor\', \'#CAA618\');\n\tviewer.setParameter(\'BackgroundColor1\', \'#FFFFFF\');\n\tviewer.setParameter(\'BackgroundColor2\', \'#383840\');\n\tviewer.init();\n\tviewer.update();\n\t////init done\n\tvar canvas_drop = document.getElementById(\'canvas-drop\')\n\t/*var dropzone = document.getElementById(\'dropzone\')\n\tdropzone.addEventListener(\'dragover\', handleDragOver, false);\n\tdropzone.addEventListener(\'drop\', handleFileSelect, false); */\n\tcanvas_drop.addEventListener(\'dragover\', handleDragOver, false);\n\tcanvas_drop.addEventListener(\'drop\', handleFileSelect, false);\n\n////Drag and drop logic:\n\tfunction handleFileSelect(evt) {\n\t    evt.stopPropagation();\n\t    evt.preventDefault();\n\t    var files = evt.dataTransfer.files;\n\t    console.log(evt)\n\t    console.log(files)\n\t    preview_stl(files[0])\n\t  }\n\n\t  function handleDragOver(evt) {\n\t    evt.stopPropagation();\n\t    evt.preventDefault();\n\t    evt.dataTransfer.dropEffect = \'copy\';\n\t  }\n\n////jsc3d logic\n\tvar handle_file_select = function(e) {\n\t\te.stopPropagation()\n\t\te.preventDefault()\n\t\tvar f = e.target.files[0]\n\t\tpreview_stl(f)\n\t}\n\n\tfunction preview_stl(f) {\n\t\tvar reader = new FileReader()\n\t\tvar ext = f.name.split(".")[1]\n\n\t\tfunction setup_viewer() {\n\t\t\tviewer.setParameter(\'InitRotationX\', 20);\n\t\t\tviewer.setParameter(\'InitRotationY\', 20);\n\t\t\tviewer.setParameter(\'InitRotationZ\', 0);\n\t\t\tviewer.setParameter(\'ModelColor\', \'#CAA618\');\n\t\t\tviewer.setParameter(\'BackgroundColor1\', \'#FFFFFF\');\n\t\t\tviewer.setParameter(\'BackgroundColor2\', \'#383840\');\n\t\t\tviewer.setParameter(\'RenderMode\', "flat");\n\t\t}\n\t\tsetup_viewer()\n\n\t\treader.onload = (function(file) {\n\t\t\treturn function(e) {\n\t\t\t\ttheScene = new JSC3D.Scene\n\t\t    \tstl_loader = new JSC3D.StlLoader()\n\t\t    \tstl_loader.parseStl(theScene, e.target.result)\n\t\t      \t//viewer.init()\n\t\t      \tviewer.replaceScene(theScene)\n\t\t      \tviewer.update()\n\t\t      \tconsole.log("file reader onload")\n\t\t\t}\n\t\t})(f)\n\n\t\tif (ext.toLowerCase() != "stl") {\n\t\t\talert("That doesn\'t appear to be an STL file.");\n\t\t} else {\n\t\t\treader.readAsBinaryString(f)\n\t\t}\n\t}\n}\n \n \n', 'tags': '', 'url': 'Javascript 程式碼.html'}, {'title': 'Html 原始碼', 'text': '<html>\n   <head>\n      <meta http-equiv="content-type" content="text/html;charset=utf-8">\n      <title>CMSimfly</title>\n      <link rel="stylesheet" type="text/css" href="/static/cmsimply.css">\n   </head>\n   <body>\n      <div class=\'container\'>\n      <nav>\n         <ul id=\'css3menu1\' class=\'topmenu\'>\n            <li><a href=\'/get_page/簡介\'>簡介</a>\n            <li><a href=\'/get_page/目錄結構\'>目錄結構</a>\n            <li>\n               <a href=\'/get_page/頁面編輯\'>頁面編輯</a>\n               <ul>\n                  <li>\n                     <a href=\'/get_page/插入程式碼\'>插入程式碼</a>\n                     <ul>\n                        <li><a href=\'/get_page/Java 程式碼\'>Java 程式碼</a>\n                        <li><a href=\'/get_page/Python 程式碼\'>Python 程式碼</a>\n                        <li><a href=\'/get_page/C或C++程式碼\'>C或C++程式碼</a>\n                        <li><a href=\'/get_page/Lua 程式碼\'>Lua 程式碼</a>\n                        <li><a href=\'/get_page/Javascript 程式碼\'>Javascript 程式碼</a>\n                        <li><a href=\'/get_page/Html 原始碼\'>Html 原始碼</a></li>\n                        </li>\n                     </ul>\n               </ul>\n            <li><a href=\'/get_page/網際簡報\'>網際簡報</a>\n            <li><a href=\'/get_page/網誌編輯\'>網誌編輯</a>\n            <li><a href=\'/get_page/已知錯誤\'>已知錯誤</a></li>\n         </ul>\n      </nav>\n      <section>\n         <form method=\'post\' action=\'/ssavePage\'>\n         <textarea class=\'simply-editor\' name=\'page_content\' cols=\'50\' rows=\'15\'><h3>Html 原始碼</h3></textarea>\n         <input type=\'hidden\' name=\'page_order\' value=\'9\'>\n         <input type=\'submit\' value=\'save\'>\n         <input type=button onClick="location.href=\'/get_page/Html 原始碼\'" value=\'viewpage\'>\n         </form>\n      </section>\n   </body>\n</html>\nCOPY TO CLIPBOARD\t \n \n', 'tags': '', 'url': 'Html 原始碼.html'}, {'title': 'Internet Reveal', 'text': 'CMSimfly 中採用  Reveal.js  作為網際簡報, 其中的維護檔案位於 config/reveal.js, 而對應的簡報檔案則位於 reveal 目錄中. \n', 'tags': '', 'url': 'Internet Reveal.html'}, {'title': 'Blog Editor', 'text': 'CMSimfly 採用  Pelican blog  系統, 編輯檔案位於 config/pelican.leo, 對應的 \n \xa0Markdown 原始檔案位於 markdown 目錄中, 而經 Pelican 轉換出的網誌超文件檔案則位於 blog 目錄中. \n 其餘在網誌文章中所需要的 Javascript 或 Brython 程式檔案, 則與 CMSimfly 及 Reveal.js 共用, 位於 static 目錄下. \n 上傳檔案與圖檔的引用則與 CMSimfly 架構相同. \n 第二位搶這裡也是不遺餘力 \n \n 就是這樣編輯的 \n 接下來修改這裡 \n \n', 'tags': '', 'url': 'Blog Editor.html'}, {'title': 'Issue\xa0& Solution', 'text': 'Issue 1:\xa0 全部頁面會因無法正確解讀而誤刪 。 \n Solution 1:\xa0 在特定情況下, 系統會誤刪 config/content.htm 檔案, 目前在單頁或全部頁面編輯存檔之前, 或將上一版本的 content.htm 存入 content_back.htm, 若 content.htm 內容被程式誤刪, 可以利用備份檔案複製回原始內容後, 再進行後續處理 。 \n Issue 2:\xa0 頁面標題不支援特殊符號 。 \n Solution 2:\xa0 各頁面標題目前不支援特殊符號, 例如: "/", "?" 等, 若已經發生程式無法解讀頁面的情況, 只能從編輯 config/content.htm 下手, 若系統位於遠端, 則後續必須要再設法提供一個額外的編輯 config/content.htm 檔案的網際連結功能 。 \n Issue 3:\xa0 Video 引用不支援內部引用 。 \n Solution 3:\xa0 tinymce 中插入 video 的小視窗, 要移除引用的圖像與連結, 因為一般建議不要在內容中存入 .mp4 的影片資料, 而只接受引入影片 URL 連結 。 \n Issue 4:\xa0 在分組網站上Geometry的網頁跑掉。 \n Solution 4:\xa0 由於Geometry的網頁設定的Formats裡面的Headings設定有錯誤，只要把Headings設定重新用過一次即可。', 'tags': '', 'url': 'Issue\xa0& Solution.html'}, {'title': 'Experience', 'text': '', 'tags': '', 'url': 'Experience.html'}, {'title': '40623210', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40623210.html'}, {'title': '40623224', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40623224.html'}, {'title': '40623225', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40623225.html'}, {'title': '40623226', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40623226.html'}, {'title': '40623227', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40623227.html'}, {'title': '40623234', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40623234.html'}, {'title': '40623238', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40623238.html'}, {'title': '40623239', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40623239.html'}, {'title': '40423158', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40423158.html'}, {'title': '40423232', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40423232.html'}, {'title': '40423237', 'text': 'Week4 心得 \n Week5 心得 \n Week6 心得 \n Week7 心得 \n Week8 心得 \n Week9 心得 \n', 'tags': '', 'url': '40423237.html'}]};